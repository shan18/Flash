service: flash-inference

custom:
  secrets: ${file(credentials.yml)}
  pythonRequirements:
    dockerizePip: true
    zip: true
    slim: true
    strip: false
    noDeploy:
      - docutils
      - jmespath
      - pip
      - python-dateutil
      - setuptools
      - six
      - tensorboard
    useStaticCache: true
    useDownloadCache: true
    cacheLocation: './cache'

provider:
  name: aws
  runtime: python3.8
  stage: dev
  region: ${self:custom.secrets.region}
  timeout: 30
  environment:
    S3_BUCKET: ${self:custom.secrets.bucket}
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - s3:*
      Resource: arn:aws:s3:::${self:custom.secrets.bucket}/*

package:
  individually: true
  exclude:
    - package.json
    - package-lock.json
    - node_modules/**
    - cache/**
    - test/**
    - .vscode/**
    - __pycache__/**
    - .pytest_cache/**

functions:
  check:
    handler: handler.check
    module: check
    memorySize: 3008 # MB
    timeout: 30 # seconds
    events:
      - http:
          path: check
          method: post
          cors: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - "s3:GetObject"
        Resource:
          - arn:aws:s3:::${self:custom.secrets.bucket}/*
  inference:
    handler: handler.inference
    module: infer
    memorySize: 3008 # MB
    timeout: 30 # seconds
    events:
      - http:
          path: inference
          method: post
          cors: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - "s3:GetObject"
        Resource:
          - arn:aws:s3:::${self:custom.secrets.bucket}/*
  download:
    handler: handler.download
    module: download
    memorySize: 3008 # MB
    timeout: 30 # seconds
    events:
      - http:
          path: download
          method: post
          cors: true
  clean:
    handler: handler.clean
    module: clean
    memorySize: 3008 # MB
    timeout: 30 # seconds
    events:
      - http:
          path: clean
          method: get
          cors: true
      - schedule: rate(2 hours)
    iamRoleStatements:
      - Effect: Allow
        Action:
          - "s3:GetObject"
          - "s3:PutObject"
          - "s3:DeleteObject"
        Resource:
          - arn:aws:s3:::${self:custom.secrets.bucket}/*

plugins:
  - serverless-python-requirements
